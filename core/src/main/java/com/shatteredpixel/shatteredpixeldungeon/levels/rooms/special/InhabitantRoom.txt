/*
 * Pixel Dungeon
 * Copyright (C) 2012-2015 Oleg Dolya
 *
 * Shattered Pixel Dungeon
 * Copyright (C) 2014-2018 Evan Debenham
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

package com.shatteredpixel.shatteredpixeldungeon.levels.rooms.special;

import com.shatteredpixel.shatteredpixeldungeon.Challenges;
import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Piranha;
import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.Yharnamite;
import com.shatteredpixel.shatteredpixeldungeon.items.Generator;
import com.shatteredpixel.shatteredpixeldungeon.items.Heap;
import com.shatteredpixel.shatteredpixeldungeon.items.Item;
import com.shatteredpixel.shatteredpixeldungeon.items.potions.PotionOfInvisibility;
import com.shatteredpixel.shatteredpixeldungeon.levels.Level;
import com.shatteredpixel.shatteredpixeldungeon.levels.Terrain;
import com.shatteredpixel.shatteredpixeldungeon.levels.painters.Painter;
import com.watabou.utils.Random;

public class InhabitantRoom extends SpecialRoom {

	
	
	@Override
	public int minWidth() {
		return 6;
	}
	
	@Override
	public int minHeight() {
		return 6;
	}
	
	public void paint(Level level ) {
		
		Painter.fill( level, this, Terrain.WALL );
		Painter.fill( level, this, 1, Terrain.EMPTY );
		
		Door door = entrance();
		door.set( Door.Type.REGULAR );

		int x = -1;
		int y = -1;
		x =left+ width()/2; //the door.x always in the center, no more calculation needed
		if (door.x == left) {
			
			
		//	Painter.fill(level, left+1, top+1, 1, height()-2, Terrain.EMPTY_SP);
			if(door.y < height()/2){
				Painter.fill(level, left+1, height()/2, height()-2,1, Terrain.EMPTY_SP);
				
				y =top +  height()/2;
			 			
			}else{
				Painter.fill(level, left+1, height()/2-1, height()-2,1, Terrain.EMPTY_SP);
				y =top +  height()/2-1;
				
			}

			
		} else if (door.x == right) {
			
		
		//	Painter.fill(level, right-1, top+1, 1, height()-2, Terrain.EMPTY_SP);
			if(door.y < height()/2){
				Painter.fill(level, left+1, height()/2, height()-2,1, Terrain.EMPTY_SP);
				
				y =top +  height()/2;
			 			
			}else{
				Painter.fill(level, left+1, height()/2-1,  height()-2,1, Terrain.EMPTY_SP);
				y =top +  height()/2-1;
				
			}

			
		} else if (door.y == top) {
			
		
			y =  height()/2;
		//	Painter.fill(level, left+1, top+1, width()-2, 1, Terrain.EMPTY_SP);
		Painter.fill(level, left+1, height()/2, height()-2,1, Terrain.EMPTY_SP);
		//	Painter.fill(level, left+1, height()/2, width()-2, 1, Terrain.EMPTY_SP);
			
		} else if (door.y == bottom) {
			
			y =top +  height()/2;
				Painter.fill(level, left+1, height()/2-1,  height()-2,1, Terrain.EMPTY_SP);
			
		}
		
		int pos = x + y * level.width();
		
		Painter.set( level, pos, Terrain.DOOR_SP );
		Yharnamite resident = new Yharnamite();
		
		resident.pos = pos;
		resident.number = 2;
		resident.number = Dungeon.residentNumber;
		//Dungeon.residentNumber++;
		level.mobs.add( resident );
	}
	
	


}
